From 55ea4bd405c0f8110e8b4a014b5bd4ff371084c4 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Fri, 12 Jul 2019 10:36:29 +0800
Subject: [PATCH 5/5] HACK: glamor: render: Fix image damaged when rotating
 screen

With mali gles, the images seem to be damaged when rotating screen.

Not sure why, but doing this fix the issue.

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 glamor/glamor_render.c | 18 ++++++++++++------
 1 file changed, 12 insertions(+), 6 deletions(-)

diff --git a/glamor/glamor_render.c b/glamor/glamor_render.c
index be0741a99..f8719b07c 100644
--- a/glamor/glamor_render.c
+++ b/glamor/glamor_render.c
@@ -107,29 +107,35 @@ glamor_create_composite_fs(struct shader_key *key)
     const char *rel_sampler =
         " vec4 rel_sampler_rgba(sampler2D tex_image, vec2 tex, vec4 wh, int repeat)\n"
         "{\n"
-        "	if (repeat >= RepeatFix) {\n"
+        "	if (repeat < RepeatFix)\n"
+        "		return texture2D(tex_image, tex);\n"
+        "	else {\n"
+        "		vec2 old_tex = tex;\n"
         "		tex = rel_tex_coord(tex, wh, repeat);\n"
         "		if (repeat == RepeatFix + RepeatNone) {\n"
         "			if (tex.x < 0.0 || tex.x >= 1.0 || \n"
         "			    tex.y < 0.0 || tex.y >= 1.0)\n"
         "				return vec4(0.0, 0.0, 0.0, 0.0);\n"
-        "			tex = (fract(tex) / wh.xy);\n"
+        "			return texture2D(tex_image, old_tex);\n"
         "		}\n"
+        "		return texture2D(tex_image, tex);\n"
         "	}\n"
-        "	return texture2D(tex_image, tex);\n"
         "}\n"
         " vec4 rel_sampler_rgbx(sampler2D tex_image, vec2 tex, vec4 wh, int repeat)\n"
         "{\n"
-        "	if (repeat >= RepeatFix) {\n"
+        "	if (repeat < RepeatFix)\n"
+        "		return vec4(texture2D(tex_image, tex).rgb, 1.0);\n"
+        "	else {\n"
+        "		vec2 old_tex = tex;\n"
         "		tex = rel_tex_coord(tex, wh, repeat);\n"
         "		if (repeat == RepeatFix + RepeatNone) {\n"
         "			if (tex.x < 0.0 || tex.x >= 1.0 || \n"
         "			    tex.y < 0.0 || tex.y >= 1.0)\n"
         "				return vec4(0.0, 0.0, 0.0, 0.0);\n"
-        "			tex = (fract(tex) / wh.xy);\n"
+        "			return vec4(texture2D(tex_image, old_tex).rgb, 1.0);\n"
         "		}\n"
+        "		return vec4(texture2D(tex_image, tex).rgb, 1.0);\n"
         "	}\n"
-        "	return vec4(texture2D(tex_image, tex).rgb, 1.0);\n"
         "}\n";
 
     const char *source_solid_fetch =
-- 
2.11.0

