From 94503c62fcb67f180205a86ebc1e0078a935308f Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Wed, 10 Jul 2019 14:50:16 +0800
Subject: [PATCH 4/5] HACK: glamor: Using spans bail func for small arcs for
 gtkperf

The gtkperf's arc test would draw 1000 small arcs.
For small arcs, the glamor's performance is worse.

But preparing accessing requires buffer sync, so it might be slower in
some other cases.

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 glamor/glamor_core.c  | 23 ++++++++++++++++++++++-
 glamor/glamor_priv.h  |  1 +
 glamor/glamor_spans.c |  7 ++++++-
 3 files changed, 29 insertions(+), 2 deletions(-)

diff --git a/glamor/glamor_core.c b/glamor/glamor_core.c
index cb315e2d1..4c90edc49 100644
--- a/glamor/glamor_core.c
+++ b/glamor/glamor_core.c
@@ -110,6 +110,27 @@ glamor_link_glsl_prog(ScreenPtr screen, GLint prog, const char *format, ...)
     }
 }
 
+/* HACK for gtkperf, prefer bail functions for small arcs */
+#ifdef GLAMOR_HAS_GBM_MAP
+static void
+glamor_poly_fill_arc(DrawablePtr pDraw, GCPtr pGC, int narcs_all, xArc * parcs)
+{
+    PixmapPtr pixmap = glamor_get_drawable_pixmap(pDraw);
+    glamor_pixmap_private *pixmap_priv;
+    int i;
+
+    pixmap_priv = glamor_get_pixmap_private(pixmap);
+    pixmap_priv->prefer_bail = TRUE;
+    for (i = 0; i < narcs_all; i++) {
+        if (parcs->width > 256 || parcs->height > 256)
+            pixmap_priv->prefer_bail = FALSE;
+    }
+    miPolyFillArc(pDraw, pGC, narcs_all, parcs);
+    pixmap_priv->prefer_bail = FALSE;
+}
+#else
+#define glamor_poly_fill_arc miPolyFillArc
+#endif
 
 static GCOps glamor_gc_ops = {
     .FillSpans = glamor_fill_spans,
@@ -124,7 +145,7 @@ static GCOps glamor_gc_ops = {
     .PolyArc = miPolyArc,
     .FillPolygon = miFillPolygon,
     .PolyFillRect = glamor_poly_fill_rect,
-    .PolyFillArc = miPolyFillArc,
+    .PolyFillArc = glamor_poly_fill_arc,
     .PolyText8 = glamor_poly_text8,
     .PolyText16 = glamor_poly_text16,
     .ImageText8 = glamor_image_text8,
diff --git a/glamor/glamor_priv.h b/glamor/glamor_priv.h
index 2960a2e6d..e2e5ece38 100644
--- a/glamor/glamor_priv.h
+++ b/glamor/glamor_priv.h
@@ -360,6 +360,7 @@ typedef struct glamor_pixmap_private {
     Bool bo_mapped;
     void *map_data;
     Bool exporting;
+    Bool prefer_bail;
 #endif
     /** block width of this large pixmap. */
     int block_w;
diff --git a/glamor/glamor_spans.c b/glamor/glamor_spans.c
index b5f297d2f..ba246bd0f 100644
--- a/glamor/glamor_spans.c
+++ b/glamor/glamor_spans.c
@@ -171,7 +171,12 @@ glamor_fill_spans(DrawablePtr drawable,
                   GCPtr gc,
                   int n, DDXPointPtr points, int *widths, int sorted)
 {
-    if (glamor_fill_spans_gl(drawable, gc, n, points, widths, sorted))
+    PixmapPtr pixmap = glamor_get_drawable_pixmap(drawable);
+    glamor_pixmap_private *pixmap_priv;
+
+    pixmap_priv = glamor_get_pixmap_private(pixmap);
+    if (!pixmap_priv->prefer_bail &&
+        glamor_fill_spans_gl(drawable, gc, n, points, widths, sorted))
         return;
     glamor_fill_spans_bail(drawable, gc, n, points, widths, sorted);
 }
-- 
2.11.0

