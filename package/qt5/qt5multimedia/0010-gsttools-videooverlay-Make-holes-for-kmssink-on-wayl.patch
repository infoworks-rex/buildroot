From bf9e685242073b1b69f45d645731155494c0d779 Mon Sep 17 00:00:00 2001
From: Jeffy Chen <jeffy.chen@rock-chips.com>
Date: Tue, 11 Dec 2018 10:40:55 +0800
Subject: [PATCH] gsttools: videooverlay: Make holes for kmssink on wayland

Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 src/gsttools/qgstreamervideooverlay.cpp | 35 +++++++++++++++++++++++++++++----
 1 file changed, 31 insertions(+), 4 deletions(-)

diff --git a/src/gsttools/qgstreamervideooverlay.cpp b/src/gsttools/qgstreamervideooverlay.cpp
index 88081f6..fd0f93a 100644
--- a/src/gsttools/qgstreamervideooverlay.cpp
+++ b/src/gsttools/qgstreamervideooverlay.cpp
@@ -51,6 +51,10 @@
 #include <gst/video/videooverlay.h>
 #endif
 
+#ifdef ENABLE_WAYLAND_PLATFORM
+#include <wayland-client-protocol.h>
+#endif
+
 QT_BEGIN_NAMESPACE
 
 struct ElementMap
@@ -274,6 +278,7 @@ static QWindow *findWindow(WId id) {
     return NULL;
 }
 
+#ifdef ENABLE_WAYLAND_PLATFORM
 // See qt5wayland->qwaylandwindow.cpp
 static QPoint getDisplayPosition(QWindow *window)
 {
@@ -307,12 +312,15 @@ static QPoint getDisplayPosition(QWindow *window)
 
     return pos;
 }
+#endif
 
 bool QGstreamerVideoOverlay::processSyncMessage(const QGstreamerMessage &message)
 {
     GstMessage* gm = message.rawMessage();
 
 #if GST_CHECK_VERSION(1,0,0)
+
+#ifdef ENABLE_WAYLAND_PLATFORM
 #define GST_WAYLAND_DISPLAY_HANDLE_CONTEXT_TYPE "GstWaylandDisplayHandleContextType"
     if (gm && (GST_MESSAGE_TYPE(gm) == GST_MESSAGE_NEED_CONTEXT)) {
         const gchar *type = NULL;
@@ -340,24 +348,43 @@ bool QGstreamerVideoOverlay::processSyncMessage(const QGstreamerMessage &message
         QPlatformNativeInterface *native =
             QGuiApplication::platformNativeInterface();
         QWindow *window = findWindow(m_windowId);
-        void *handle = NULL;
+        wl_surface *surface = NULL;
+        wl_compositor *compositor = NULL;
 
         QVideoWindowAbstractInterface *intf =
             dynamic_cast<QVideoWindowAbstractInterface *>(window);
         if (intf)
             window = findWindow(intf->videoWinId());
 
-        if (native && window)
-            handle = native->nativeResourceForWindow("surface", window);
+        if (native && window) {
+            surface = (wl_surface*) native->nativeResourceForWindow("surface", window);
+            compositor = (wl_compositor*) native->nativeResourceForWindow("compositor", window);
+        }
 
-        gst_video_overlay_set_window_handle(overlay, (WId) handle);
+        gst_video_overlay_set_window_handle(overlay, (WId) surface);
 
         QPoint pos = getDisplayPosition(window);
         gst_video_overlay_set_render_rectangle(overlay, pos.x() + m_rect.x(),
             pos.y() + m_rect.y(), m_rect.width(), m_rect.height());
+
+        if (!surface || !compositor)
+            return true;
+
+        // HACK: Let wayland server to make a hole for kmssink
+        if (!strstr(GST_ELEMENT_NAME(m_videoSink), "kmssink"))
+                return true;
+
+        struct wl_region *region = wl_compositor_create_region(compositor);
+        wl_region_add(region, pos.x() + m_rect.x(), pos.y() + m_rect.y(),
+                m_rect.width(), m_rect.height());
+        wl_region_add(region, -1, -1, 1, 1);
+        wl_surface_set_opaque_region(surface, region);
+        wl_region_destroy(region);
+
         return true;
     }
 #endif
+#endif
 
 #if !GST_CHECK_VERSION(1,0,0)
     if (gm && (GST_MESSAGE_TYPE(gm) == GST_MESSAGE_ELEMENT) &&
-- 
2.11.0

